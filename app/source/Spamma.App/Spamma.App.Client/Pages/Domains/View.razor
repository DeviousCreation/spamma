@page "/domains/{id}"
@using MediatR
@using Spamma.App.Client.Infrastructure.Constants
@using Spamma.App.Client.Infrastructure.Querying.Domain.Queries
@using Spamma.App.Client.Infrastructure.Querying.Domain.QueryResults
@rendermode InteractiveWebAssembly
<h3>View</h3>
@if(_domain is not null)
{
    <p>Id: @_domain.Id</p>
    <p>Name: @_domain.Name</p>
}
else
{
    <p>Loading...</p>
}

@code {
    [Inject]
    private ISender Sender { get; set; } = default!;
    
    [Parameter]
    public string Id { get; set; } = default!;
    
    private Guid _id;
    private GetDomainByIdQueryResult? _domain;

    protected override async Task OnParametersSetAsync()
    {
        _id = Guid.Parse(Id);
        var query = new GetDomainByIdQuery(_id);
        var result = await Sender.Send(query);
        if (result.Status == QueryResultStatus.Succeeded)
        {
            this._domain = result.Data;
        }
        
        await base.OnParametersSetAsync();
    }

}